#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYTHUVIEN")]
	public partial class QuanLyThuVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHITIETMUONTRA(CHITIETMUONTRA instance);
    partial void UpdateCHITIETMUONTRA(CHITIETMUONTRA instance);
    partial void DeleteCHITIETMUONTRA(CHITIETMUONTRA instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    partial void InsertCHUCVU(CHUCVU instance);
    partial void UpdateCHUCVU(CHUCVU instance);
    partial void DeleteCHUCVU(CHUCVU instance);
    partial void InsertDOCGIA(DOCGIA instance);
    partial void UpdateDOCGIA(DOCGIA instance);
    partial void DeleteDOCGIA(DOCGIA instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertMUONTRASACH(MUONTRASACH instance);
    partial void UpdateMUONTRASACH(MUONTRASACH instance);
    partial void DeleteMUONTRASACH(MUONTRASACH instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHAXUATBAN(NHAXUATBAN instance);
    partial void UpdateNHAXUATBAN(NHAXUATBAN instance);
    partial void DeleteNHAXUATBAN(NHAXUATBAN instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertPHIEUPHAT(PHIEUPHAT instance);
    partial void UpdatePHIEUPHAT(PHIEUPHAT instance);
    partial void DeletePHIEUPHAT(PHIEUPHAT instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    partial void InsertTACGIA(TACGIA instance);
    partial void UpdateTACGIA(TACGIA instance);
    partial void DeleteTACGIA(TACGIA instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    #endregion
		
		public QuanLyThuVienDataContext() : 
				base(global::DTO.Properties.Settings.Default.QUANLYTHUVIENConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyThuVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHITIETMUONTRA> CHITIETMUONTRAs
		{
			get
			{
				return this.GetTable<CHITIETMUONTRA>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
		
		public System.Data.Linq.Table<CHUCVU> CHUCVUs
		{
			get
			{
				return this.GetTable<CHUCVU>();
			}
		}
		
		public System.Data.Linq.Table<DOCGIA> DOCGIAs
		{
			get
			{
				return this.GetTable<DOCGIA>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<MUONTRASACH> MUONTRASACHes
		{
			get
			{
				return this.GetTable<MUONTRASACH>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHAXUATBAN> NHAXUATBANs
		{
			get
			{
				return this.GetTable<NHAXUATBAN>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUPHAT> PHIEUPHATs
		{
			get
			{
				return this.GetTable<PHIEUPHAT>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
		
		public System.Data.Linq.Table<TACGIA> TACGIAs
		{
			get
			{
				return this.GetTable<TACGIA>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETMUONTRA")]
	public partial class CHITIETMUONTRA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCHITIETMUON;
		
		private int _IDMUON;
		
		private int _IDSACH;
		
		private int _IDTHUTHUCHOMUON;
		
		private System.Nullable<int> _IDTHUTHUNHANTRA;
		
		private int _SOLUONGMUON;
		
		private System.DateTime _NGAYMUON;
		
		private System.Nullable<System.DateTime> _HANTRA;
		
		private double _TIENTHECHAN;
		
		private bool _TINHTRANG;
		
		private EntitySet<PHIEUPHAT> _PHIEUPHATs;
		
		private EntityRef<MUONTRASACH> _MUONTRASACH;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<NHANVIEN> _NHANVIEN1;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCHITIETMUONChanging(int value);
    partial void OnIDCHITIETMUONChanged();
    partial void OnIDMUONChanging(int value);
    partial void OnIDMUONChanged();
    partial void OnIDSACHChanging(int value);
    partial void OnIDSACHChanged();
    partial void OnIDTHUTHUCHOMUONChanging(int value);
    partial void OnIDTHUTHUCHOMUONChanged();
    partial void OnIDTHUTHUNHANTRAChanging(System.Nullable<int> value);
    partial void OnIDTHUTHUNHANTRAChanged();
    partial void OnSOLUONGMUONChanging(int value);
    partial void OnSOLUONGMUONChanged();
    partial void OnNGAYMUONChanging(System.DateTime value);
    partial void OnNGAYMUONChanged();
    partial void OnHANTRAChanging(System.Nullable<System.DateTime> value);
    partial void OnHANTRAChanged();
    partial void OnTIENTHECHANChanging(double value);
    partial void OnTIENTHECHANChanged();
    partial void OnTINHTRANGChanging(bool value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public CHITIETMUONTRA()
		{
			this._PHIEUPHATs = new EntitySet<PHIEUPHAT>(new Action<PHIEUPHAT>(this.attach_PHIEUPHATs), new Action<PHIEUPHAT>(this.detach_PHIEUPHATs));
			this._MUONTRASACH = default(EntityRef<MUONTRASACH>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._NHANVIEN1 = default(EntityRef<NHANVIEN>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCHITIETMUON", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCHITIETMUON
		{
			get
			{
				return this._IDCHITIETMUON;
			}
			set
			{
				if ((this._IDCHITIETMUON != value))
				{
					this.OnIDCHITIETMUONChanging(value);
					this.SendPropertyChanging();
					this._IDCHITIETMUON = value;
					this.SendPropertyChanged("IDCHITIETMUON");
					this.OnIDCHITIETMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMUON", DbType="Int NOT NULL")]
		public int IDMUON
		{
			get
			{
				return this._IDMUON;
			}
			set
			{
				if ((this._IDMUON != value))
				{
					if (this._MUONTRASACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMUONChanging(value);
					this.SendPropertyChanging();
					this._IDMUON = value;
					this.SendPropertyChanged("IDMUON");
					this.OnIDMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSACH", DbType="Int NOT NULL")]
		public int IDSACH
		{
			get
			{
				return this._IDSACH;
			}
			set
			{
				if ((this._IDSACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSACHChanging(value);
					this.SendPropertyChanging();
					this._IDSACH = value;
					this.SendPropertyChanged("IDSACH");
					this.OnIDSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTHUTHUCHOMUON", DbType="Int NOT NULL")]
		public int IDTHUTHUCHOMUON
		{
			get
			{
				return this._IDTHUTHUCHOMUON;
			}
			set
			{
				if ((this._IDTHUTHUCHOMUON != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTHUTHUCHOMUONChanging(value);
					this.SendPropertyChanging();
					this._IDTHUTHUCHOMUON = value;
					this.SendPropertyChanged("IDTHUTHUCHOMUON");
					this.OnIDTHUTHUCHOMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTHUTHUNHANTRA", DbType="Int")]
		public System.Nullable<int> IDTHUTHUNHANTRA
		{
			get
			{
				return this._IDTHUTHUNHANTRA;
			}
			set
			{
				if ((this._IDTHUTHUNHANTRA != value))
				{
					if (this._NHANVIEN1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTHUTHUNHANTRAChanging(value);
					this.SendPropertyChanging();
					this._IDTHUTHUNHANTRA = value;
					this.SendPropertyChanged("IDTHUTHUNHANTRA");
					this.OnIDTHUTHUNHANTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGMUON", DbType="Int NOT NULL")]
		public int SOLUONGMUON
		{
			get
			{
				return this._SOLUONGMUON;
			}
			set
			{
				if ((this._SOLUONGMUON != value))
				{
					this.OnSOLUONGMUONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGMUON = value;
					this.SendPropertyChanged("SOLUONGMUON");
					this.OnSOLUONGMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYMUON", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYMUON
		{
			get
			{
				return this._NGAYMUON;
			}
			set
			{
				if ((this._NGAYMUON != value))
				{
					this.OnNGAYMUONChanging(value);
					this.SendPropertyChanging();
					this._NGAYMUON = value;
					this.SendPropertyChanged("NGAYMUON");
					this.OnNGAYMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANTRA", DbType="DateTime")]
		public System.Nullable<System.DateTime> HANTRA
		{
			get
			{
				return this._HANTRA;
			}
			set
			{
				if ((this._HANTRA != value))
				{
					this.OnHANTRAChanging(value);
					this.SendPropertyChanging();
					this._HANTRA = value;
					this.SendPropertyChanged("HANTRA");
					this.OnHANTRAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENTHECHAN", DbType="Float NOT NULL")]
		public double TIENTHECHAN
		{
			get
			{
				return this._TIENTHECHAN;
			}
			set
			{
				if ((this._TIENTHECHAN != value))
				{
					this.OnTIENTHECHANChanging(value);
					this.SendPropertyChanging();
					this._TIENTHECHAN = value;
					this.SendPropertyChanged("TIENTHECHAN");
					this.OnTIENTHECHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit NOT NULL")]
		public bool TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETMUONTRA_PHIEUPHAT", Storage="_PHIEUPHATs", ThisKey="IDCHITIETMUON", OtherKey="IDCHITIETMUON")]
		public EntitySet<PHIEUPHAT> PHIEUPHATs
		{
			get
			{
				return this._PHIEUPHATs;
			}
			set
			{
				this._PHIEUPHATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUONTRASACH_CHITIETMUONTRA", Storage="_MUONTRASACH", ThisKey="IDMUON", OtherKey="IDMUON", IsForeignKey=true)]
		public MUONTRASACH MUONTRASACH
		{
			get
			{
				return this._MUONTRASACH.Entity;
			}
			set
			{
				MUONTRASACH previousValue = this._MUONTRASACH.Entity;
				if (((previousValue != value) 
							|| (this._MUONTRASACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MUONTRASACH.Entity = null;
						previousValue.CHITIETMUONTRAs.Remove(this);
					}
					this._MUONTRASACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONTRAs.Add(this);
						this._IDMUON = value.IDMUON;
					}
					else
					{
						this._IDMUON = default(int);
					}
					this.SendPropertyChanged("MUONTRASACH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONTRA", Storage="_NHANVIEN", ThisKey="IDTHUTHUCHOMUON", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.CHITIETMUONTRAs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONTRAs.Add(this);
						this._IDTHUTHUCHOMUON = value.ID;
					}
					else
					{
						this._IDTHUTHUCHOMUON = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONTRA1", Storage="_NHANVIEN1", ThisKey="IDTHUTHUNHANTRA", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN1
		{
			get
			{
				return this._NHANVIEN1.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN1.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN1.Entity = null;
						previousValue.CHITIETMUONTRAs1.Remove(this);
					}
					this._NHANVIEN1.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONTRAs1.Add(this);
						this._IDTHUTHUNHANTRA = value.ID;
					}
					else
					{
						this._IDTHUTHUNHANTRA = default(Nullable<int>);
					}
					this.SendPropertyChanged("NHANVIEN1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETMUONTRA", Storage="_SACH", ThisKey="IDSACH", OtherKey="ID", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CHITIETMUONTRAs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CHITIETMUONTRAs.Add(this);
						this._IDSACH = value.ID;
					}
					else
					{
						this._IDSACH = default(int);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUPHATs(PHIEUPHAT entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETMUONTRA = this;
		}
		
		private void detach_PHIEUPHATs(PHIEUPHAT entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETMUONTRA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENTHELOAI;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENTHELOAIChanging(string value);
    partial void OnTENTHELOAIChanged();
    #endregion
		
		public THELOAI()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHELOAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENTHELOAI
		{
			get
			{
				return this._TENTHELOAI;
			}
			set
			{
				if ((this._TENTHELOAI != value))
				{
					this.OnTENTHELOAIChanging(value);
					this.SendPropertyChanging();
					this._TENTHELOAI = value;
					this.SendPropertyChanged("TENTHELOAI");
					this.OnTENTHELOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_SACH", Storage="_SACHes", ThisKey="ID", OtherKey="IDTHELOAI")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUCVU")]
	public partial class CHUCVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENCHUCVU;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENCHUCVUChanging(string value);
    partial void OnTENCHUCVUChanged();
    #endregion
		
		public CHUCVU()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENCHUCVU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENCHUCVU
		{
			get
			{
				return this._TENCHUCVU;
			}
			set
			{
				if ((this._TENCHUCVU != value))
				{
					this.OnTENCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._TENCHUCVU = value;
					this.SendPropertyChanged("TENCHUCVU");
					this.OnTENCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="ID", OtherKey="MACHUCVU")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="ID", OtherKey="CHUCVU")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU = null;
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.CHUCVU1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DOCGIA")]
	public partial class DOCGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMASOTHE;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<System.DateTime> _HANSUDUNG;
		
		private System.Nullable<int> _IDDONVI;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private System.Nullable<bool> _GIOITINH;
		
		private string _EMAIL;
		
		private string _SODT;
		
		private string _CMND;
		
		private string _DIACHI;
		
		private string _HINHANH;
		
		private EntitySet<MUONTRASACH> _MUONTRASACHes;
		
		private EntityRef<DONVI> _DONVI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMASOTHEChanging(int value);
    partial void OnIDMASOTHEChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnHANSUDUNGChanging(System.Nullable<System.DateTime> value);
    partial void OnHANSUDUNGChanged();
    partial void OnIDDONVIChanging(System.Nullable<int> value);
    partial void OnIDDONVIChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(System.Nullable<bool> value);
    partial void OnGIOITINHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSODTChanging(string value);
    partial void OnSODTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public DOCGIA()
		{
			this._MUONTRASACHes = new EntitySet<MUONTRASACH>(new Action<MUONTRASACH>(this.attach_MUONTRASACHes), new Action<MUONTRASACH>(this.detach_MUONTRASACHes));
			this._DONVI = default(EntityRef<DONVI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMASOTHE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMASOTHE
		{
			get
			{
				return this._IDMASOTHE;
			}
			set
			{
				if ((this._IDMASOTHE != value))
				{
					this.OnIDMASOTHEChanging(value);
					this.SendPropertyChanging();
					this._IDMASOTHE = value;
					this.SendPropertyChanged("IDMASOTHE");
					this.OnIDMASOTHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HANSUDUNG", DbType="Date")]
		public System.Nullable<System.DateTime> HANSUDUNG
		{
			get
			{
				return this._HANSUDUNG;
			}
			set
			{
				if ((this._HANSUDUNG != value))
				{
					this.OnHANSUDUNGChanging(value);
					this.SendPropertyChanging();
					this._HANSUDUNG = value;
					this.SendPropertyChanged("HANSUDUNG");
					this.OnHANSUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDONVI", DbType="Int")]
		public System.Nullable<int> IDDONVI
		{
			get
			{
				return this._IDDONVI;
			}
			set
			{
				if ((this._IDDONVI != value))
				{
					if (this._DONVI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDONVIChanging(value);
					this.SendPropertyChanging();
					this._IDDONVI = value;
					this.SendPropertyChanged("IDDONVI");
					this.OnIDDONVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODT", DbType="NChar(20)")]
		public string SODT
		{
			get
			{
				return this._SODT;
			}
			set
			{
				if ((this._SODT != value))
				{
					this.OnSODTChanging(value);
					this.SendPropertyChanging();
					this._SODT = value;
					this.SendPropertyChanged("SODT");
					this.OnSODTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NChar(100)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_MUONTRASACH", Storage="_MUONTRASACHes", ThisKey="IDMASOTHE", OtherKey="IDMATHEDOCGIA")]
		public EntitySet<MUONTRASACH> MUONTRASACHes
		{
			get
			{
				return this._MUONTRASACHes;
			}
			set
			{
				this._MUONTRASACHes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_DOCGIA", Storage="_DONVI", ThisKey="IDDONVI", OtherKey="ID", IsForeignKey=true)]
		public DONVI DONVI
		{
			get
			{
				return this._DONVI.Entity;
			}
			set
			{
				DONVI previousValue = this._DONVI.Entity;
				if (((previousValue != value) 
							|| (this._DONVI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONVI.Entity = null;
						previousValue.DOCGIAs.Remove(this);
					}
					this._DONVI.Entity = value;
					if ((value != null))
					{
						value.DOCGIAs.Add(this);
						this._IDDONVI = value.ID;
					}
					else
					{
						this._IDDONVI = default(Nullable<int>);
					}
					this.SendPropertyChanged("DONVI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = this;
		}
		
		private void detach_MUONTRASACHes(MUONTRASACH entity)
		{
			this.SendPropertyChanging();
			entity.DOCGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENDONVI;
		
		private EntitySet<DOCGIA> _DOCGIAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENDONVIChanging(string value);
    partial void OnTENDONVIChanged();
    #endregion
		
		public DONVI()
		{
			this._DOCGIAs = new EntitySet<DOCGIA>(new Action<DOCGIA>(this.attach_DOCGIAs), new Action<DOCGIA>(this.detach_DOCGIAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDONVI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENDONVI
		{
			get
			{
				return this._TENDONVI;
			}
			set
			{
				if ((this._TENDONVI != value))
				{
					this.OnTENDONVIChanging(value);
					this.SendPropertyChanging();
					this._TENDONVI = value;
					this.SendPropertyChanged("TENDONVI");
					this.OnTENDONVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONVI_DOCGIA", Storage="_DOCGIAs", ThisKey="ID", OtherKey="IDDONVI")]
		public EntitySet<DOCGIA> DOCGIAs
		{
			get
			{
				return this._DOCGIAs;
			}
			set
			{
				this._DOCGIAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DOCGIAs(DOCGIA entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = this;
		}
		
		private void detach_DOCGIAs(DOCGIA entity)
		{
			this.SendPropertyChanging();
			entity.DONVI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAMANHINH;
		
		private string _TENMANHINH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMANHINHChanging(int value);
    partial void OnMAMANHINHChanged();
    partial void OnTENMANHINHChanging(string value);
    partial void OnTENMANHINHChanged();
    #endregion
		
		public MANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMANHINH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAMANHINH
		{
			get
			{
				return this._MAMANHINH;
			}
			set
			{
				if ((this._MAMANHINH != value))
				{
					this.OnMAMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MAMANHINH = value;
					this.SendPropertyChanged("MAMANHINH");
					this.OnMAMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMANHINH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENMANHINH
		{
			get
			{
				return this._TENMANHINH;
			}
			set
			{
				if ((this._TENMANHINH != value))
				{
					this.OnTENMANHINHChanging(value);
					this.SendPropertyChanging();
					this._TENMANHINH = value;
					this.SendPropertyChanged("TENMANHINH");
					this.OnTENMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MAMANHINH", OtherKey="MAMANHINH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MUONTRASACH")]
	public partial class MUONTRASACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDMUON;
		
		private int _IDMATHEDOCGIA;
		
		private EntitySet<CHITIETMUONTRA> _CHITIETMUONTRAs;
		
		private EntityRef<DOCGIA> _DOCGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMUONChanging(int value);
    partial void OnIDMUONChanged();
    partial void OnIDMATHEDOCGIAChanging(int value);
    partial void OnIDMATHEDOCGIAChanged();
    #endregion
		
		public MUONTRASACH()
		{
			this._CHITIETMUONTRAs = new EntitySet<CHITIETMUONTRA>(new Action<CHITIETMUONTRA>(this.attach_CHITIETMUONTRAs), new Action<CHITIETMUONTRA>(this.detach_CHITIETMUONTRAs));
			this._DOCGIA = default(EntityRef<DOCGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMUON", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDMUON
		{
			get
			{
				return this._IDMUON;
			}
			set
			{
				if ((this._IDMUON != value))
				{
					this.OnIDMUONChanging(value);
					this.SendPropertyChanging();
					this._IDMUON = value;
					this.SendPropertyChanged("IDMUON");
					this.OnIDMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMATHEDOCGIA", DbType="Int NOT NULL")]
		public int IDMATHEDOCGIA
		{
			get
			{
				return this._IDMATHEDOCGIA;
			}
			set
			{
				if ((this._IDMATHEDOCGIA != value))
				{
					if (this._DOCGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMATHEDOCGIAChanging(value);
					this.SendPropertyChanging();
					this._IDMATHEDOCGIA = value;
					this.SendPropertyChanged("IDMATHEDOCGIA");
					this.OnIDMATHEDOCGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MUONTRASACH_CHITIETMUONTRA", Storage="_CHITIETMUONTRAs", ThisKey="IDMUON", OtherKey="IDMUON")]
		public EntitySet<CHITIETMUONTRA> CHITIETMUONTRAs
		{
			get
			{
				return this._CHITIETMUONTRAs;
			}
			set
			{
				this._CHITIETMUONTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DOCGIA_MUONTRASACH", Storage="_DOCGIA", ThisKey="IDMATHEDOCGIA", OtherKey="IDMASOTHE", IsForeignKey=true)]
		public DOCGIA DOCGIA
		{
			get
			{
				return this._DOCGIA.Entity;
			}
			set
			{
				DOCGIA previousValue = this._DOCGIA.Entity;
				if (((previousValue != value) 
							|| (this._DOCGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DOCGIA.Entity = null;
						previousValue.MUONTRASACHes.Remove(this);
					}
					this._DOCGIA.Entity = value;
					if ((value != null))
					{
						value.MUONTRASACHes.Add(this);
						this._IDMATHEDOCGIA = value.IDMASOTHE;
					}
					else
					{
						this._IDMATHEDOCGIA = default(int);
					}
					this.SendPropertyChanged("DOCGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.MUONTRASACH = this;
		}
		
		private void detach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.MUONTRASACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private System.Nullable<bool> _GIOITINH;
		
		private string _EMAIL;
		
		private string _SODT;
		
		private string _CMND;
		
		private string _DIACHI;
		
		private System.Nullable<System.DateTime> _NGAYVAOLAM;
		
		private EntitySet<CHITIETMUONTRA> _CHITIETMUONTRAs;
		
		private EntitySet<CHITIETMUONTRA> _CHITIETMUONTRAs1;
		
		private EntitySet<PHIEUPHAT> _PHIEUPHATs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGIOITINHChanging(System.Nullable<bool> value);
    partial void OnGIOITINHChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSODTChanging(string value);
    partial void OnSODTChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnNGAYVAOLAMChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYVAOLAMChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._CHITIETMUONTRAs = new EntitySet<CHITIETMUONTRA>(new Action<CHITIETMUONTRA>(this.attach_CHITIETMUONTRAs), new Action<CHITIETMUONTRA>(this.detach_CHITIETMUONTRAs));
			this._CHITIETMUONTRAs1 = new EntitySet<CHITIETMUONTRA>(new Action<CHITIETMUONTRA>(this.attach_CHITIETMUONTRAs1), new Action<CHITIETMUONTRA>(this.detach_CHITIETMUONTRAs1));
			this._PHIEUPHATs = new EntitySet<PHIEUPHAT>(new Action<PHIEUPHAT>(this.attach_PHIEUPHATs), new Action<PHIEUPHAT>(this.detach_PHIEUPHATs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="Bit")]
		public System.Nullable<bool> GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODT", DbType="NChar(20)")]
		public string SODT
		{
			get
			{
				return this._SODT;
			}
			set
			{
				if ((this._SODT != value))
				{
					this.OnSODTChanging(value);
					this.SendPropertyChanging();
					this._SODT = value;
					this.SendPropertyChanged("SODT");
					this.OnSODTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYVAOLAM", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYVAOLAM
		{
			get
			{
				return this._NGAYVAOLAM;
			}
			set
			{
				if ((this._NGAYVAOLAM != value))
				{
					this.OnNGAYVAOLAMChanging(value);
					this.SendPropertyChanging();
					this._NGAYVAOLAM = value;
					this.SendPropertyChanged("NGAYVAOLAM");
					this.OnNGAYVAOLAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONTRA", Storage="_CHITIETMUONTRAs", ThisKey="ID", OtherKey="IDTHUTHUCHOMUON")]
		public EntitySet<CHITIETMUONTRA> CHITIETMUONTRAs
		{
			get
			{
				return this._CHITIETMUONTRAs;
			}
			set
			{
				this._CHITIETMUONTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_CHITIETMUONTRA1", Storage="_CHITIETMUONTRAs1", ThisKey="ID", OtherKey="IDTHUTHUNHANTRA")]
		public EntitySet<CHITIETMUONTRA> CHITIETMUONTRAs1
		{
			get
			{
				return this._CHITIETMUONTRAs1;
			}
			set
			{
				this._CHITIETMUONTRAs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUPHAT", Storage="_PHIEUPHATs", ThisKey="ID", OtherKey="IDTHUTHULAPPHIEU")]
		public EntitySet<PHIEUPHAT> PHIEUPHATs
		{
			get
			{
				return this._PHIEUPHATs;
			}
			set
			{
				this._PHIEUPHATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="EMAIL", OtherKey="EMAIL", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._EMAIL = value.EMAIL;
					}
					else
					{
						this._EMAIL = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_CHITIETMUONTRAs1(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = this;
		}
		
		private void detach_CHITIETMUONTRAs1(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN1 = null;
		}
		
		private void attach_PHIEUPHATs(PHIEUPHAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUPHATs(PHIEUPHAT entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAXUATBAN")]
	public partial class NHAXUATBAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENNXB;
		
		private string _SODT;
		
		private string _DIACHI;
		
		private string _EMAIL;
		
		private string _WEBSITE;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENNXBChanging(string value);
    partial void OnTENNXBChanged();
    partial void OnSODTChanging(string value);
    partial void OnSODTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnWEBSITEChanging(string value);
    partial void OnWEBSITEChanged();
    #endregion
		
		public NHAXUATBAN()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNXB", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENNXB
		{
			get
			{
				return this._TENNXB;
			}
			set
			{
				if ((this._TENNXB != value))
				{
					this.OnTENNXBChanging(value);
					this.SendPropertyChanging();
					this._TENNXB = value;
					this.SendPropertyChanged("TENNXB");
					this.OnTENNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODT", DbType="NChar(20)")]
		public string SODT
		{
			get
			{
				return this._SODT;
			}
			set
			{
				if ((this._SODT != value))
				{
					this.OnSODTChanging(value);
					this.SendPropertyChanging();
					this._SODT = value;
					this.SendPropertyChanged("SODT");
					this.OnSODTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WEBSITE", DbType="NVarChar(50)")]
		public string WEBSITE
		{
			get
			{
				return this._WEBSITE;
			}
			set
			{
				if ((this._WEBSITE != value))
				{
					this.OnWEBSITEChanging(value);
					this.SendPropertyChanging();
					this._WEBSITE = value;
					this.SendPropertyChanged("WEBSITE");
					this.OnWEBSITEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_SACHes", ThisKey="ID", OtherKey="IDNXB")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.NHAXUATBAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAMANHINH;
		
		private int _MACHUCVU;
		
		private bool _COQUYEN;
		
		private EntityRef<CHUCVU> _CHUCVU;
		
		private EntityRef<MANHINH> _MANHINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMANHINHChanging(int value);
    partial void OnMAMANHINHChanged();
    partial void OnMACHUCVUChanging(int value);
    partial void OnMACHUCVUChanged();
    partial void OnCOQUYENChanging(bool value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._CHUCVU = default(EntityRef<CHUCVU>);
			this._MANHINH = default(EntityRef<MANHINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMANHINH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAMANHINH
		{
			get
			{
				return this._MAMANHINH;
			}
			set
			{
				if ((this._MAMANHINH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MAMANHINH = value;
					this.SendPropertyChanged("MAMANHINH");
					this.OnMAMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUCVU", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MACHUCVU
		{
			get
			{
				return this._MACHUCVU;
			}
			set
			{
				if ((this._MACHUCVU != value))
				{
					if (this._CHUCVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUCVUChanging(value);
					this.SendPropertyChanging();
					this._MACHUCVU = value;
					this.SendPropertyChanged("MACHUCVU");
					this.OnMACHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit NOT NULL")]
		public bool COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_PHANQUYEN", Storage="_CHUCVU", ThisKey="MACHUCVU", OtherKey="ID", IsForeignKey=true)]
		public CHUCVU CHUCVU
		{
			get
			{
				return this._CHUCVU.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._CHUCVU.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MACHUCVU = value.ID;
					}
					else
					{
						this._MACHUCVU = default(int);
					}
					this.SendPropertyChanged("CHUCVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_PHANQUYEN", Storage="_MANHINH", ThisKey="MAMANHINH", OtherKey="MAMANHINH", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MAMANHINH = value.MAMANHINH;
					}
					else
					{
						this._MAMANHINH = default(int);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUPHAT")]
	public partial class PHIEUPHAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPHIEU;
		
		private int _IDCHITIETMUON;
		
		private int _IDTHUTHULAPPHIEU;
		
		private System.DateTime _NGAYLAPPHIEU;
		
		private int _SONGAYQUAHAN;
		
		private double _TIENPHAT;
		
		private string _GHICHUPHAT;
		
		private EntityRef<CHITIETMUONTRA> _CHITIETMUONTRA;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPHIEUChanging(int value);
    partial void OnIDPHIEUChanged();
    partial void OnIDCHITIETMUONChanging(int value);
    partial void OnIDCHITIETMUONChanged();
    partial void OnIDTHUTHULAPPHIEUChanging(int value);
    partial void OnIDTHUTHULAPPHIEUChanged();
    partial void OnNGAYLAPPHIEUChanging(System.DateTime value);
    partial void OnNGAYLAPPHIEUChanged();
    partial void OnSONGAYQUAHANChanging(int value);
    partial void OnSONGAYQUAHANChanged();
    partial void OnTIENPHATChanging(double value);
    partial void OnTIENPHATChanged();
    partial void OnGHICHUPHATChanging(string value);
    partial void OnGHICHUPHATChanged();
    #endregion
		
		public PHIEUPHAT()
		{
			this._CHITIETMUONTRA = default(EntityRef<CHITIETMUONTRA>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPHIEU", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPHIEU
		{
			get
			{
				return this._IDPHIEU;
			}
			set
			{
				if ((this._IDPHIEU != value))
				{
					this.OnIDPHIEUChanging(value);
					this.SendPropertyChanging();
					this._IDPHIEU = value;
					this.SendPropertyChanged("IDPHIEU");
					this.OnIDPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCHITIETMUON", DbType="Int NOT NULL")]
		public int IDCHITIETMUON
		{
			get
			{
				return this._IDCHITIETMUON;
			}
			set
			{
				if ((this._IDCHITIETMUON != value))
				{
					if (this._CHITIETMUONTRA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCHITIETMUONChanging(value);
					this.SendPropertyChanging();
					this._IDCHITIETMUON = value;
					this.SendPropertyChanged("IDCHITIETMUON");
					this.OnIDCHITIETMUONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTHUTHULAPPHIEU", DbType="Int NOT NULL")]
		public int IDTHUTHULAPPHIEU
		{
			get
			{
				return this._IDTHUTHULAPPHIEU;
			}
			set
			{
				if ((this._IDTHUTHULAPPHIEU != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTHUTHULAPPHIEUChanging(value);
					this.SendPropertyChanging();
					this._IDTHUTHULAPPHIEU = value;
					this.SendPropertyChanged("IDTHUTHULAPPHIEU");
					this.OnIDTHUTHULAPPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAPPHIEU", DbType="DateTime NOT NULL")]
		public System.DateTime NGAYLAPPHIEU
		{
			get
			{
				return this._NGAYLAPPHIEU;
			}
			set
			{
				if ((this._NGAYLAPPHIEU != value))
				{
					this.OnNGAYLAPPHIEUChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAPPHIEU = value;
					this.SendPropertyChanged("NGAYLAPPHIEU");
					this.OnNGAYLAPPHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONGAYQUAHAN", DbType="Int NOT NULL")]
		public int SONGAYQUAHAN
		{
			get
			{
				return this._SONGAYQUAHAN;
			}
			set
			{
				if ((this._SONGAYQUAHAN != value))
				{
					this.OnSONGAYQUAHANChanging(value);
					this.SendPropertyChanging();
					this._SONGAYQUAHAN = value;
					this.SendPropertyChanged("SONGAYQUAHAN");
					this.OnSONGAYQUAHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIENPHAT", DbType="Float NOT NULL")]
		public double TIENPHAT
		{
			get
			{
				return this._TIENPHAT;
			}
			set
			{
				if ((this._TIENPHAT != value))
				{
					this.OnTIENPHATChanging(value);
					this.SendPropertyChanging();
					this._TIENPHAT = value;
					this.SendPropertyChanged("TIENPHAT");
					this.OnTIENPHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHUPHAT", DbType="NVarChar(50)")]
		public string GHICHUPHAT
		{
			get
			{
				return this._GHICHUPHAT;
			}
			set
			{
				if ((this._GHICHUPHAT != value))
				{
					this.OnGHICHUPHATChanging(value);
					this.SendPropertyChanging();
					this._GHICHUPHAT = value;
					this.SendPropertyChanged("GHICHUPHAT");
					this.OnGHICHUPHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETMUONTRA_PHIEUPHAT", Storage="_CHITIETMUONTRA", ThisKey="IDCHITIETMUON", OtherKey="IDCHITIETMUON", IsForeignKey=true)]
		public CHITIETMUONTRA CHITIETMUONTRA
		{
			get
			{
				return this._CHITIETMUONTRA.Entity;
			}
			set
			{
				CHITIETMUONTRA previousValue = this._CHITIETMUONTRA.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETMUONTRA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETMUONTRA.Entity = null;
						previousValue.PHIEUPHATs.Remove(this);
					}
					this._CHITIETMUONTRA.Entity = value;
					if ((value != null))
					{
						value.PHIEUPHATs.Add(this);
						this._IDCHITIETMUON = value.IDCHITIETMUON;
					}
					else
					{
						this._IDCHITIETMUON = default(int);
					}
					this.SendPropertyChanged("CHITIETMUONTRA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUPHAT", Storage="_NHANVIEN", ThisKey="IDTHUTHULAPPHIEU", OtherKey="ID", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUPHATs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUPHATs.Add(this);
						this._IDTHUTHULAPPHIEU = value.ID;
					}
					else
					{
						this._IDTHUTHULAPPHIEU = default(int);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENSACH;
		
		private int _IDNXB;
		
		private System.DateTime _NAMXB;
		
		private int _IDTHELOAI;
		
		private int _IDTACGIA;
		
		private double _GIA;
		
		private int _SOLUONGSACH;
		
		private string _VITRISACH;
		
		private EntitySet<CHITIETMUONTRA> _CHITIETMUONTRAs;
		
		private EntityRef<NHAXUATBAN> _NHAXUATBAN;
		
		private EntityRef<THELOAI> _THELOAI;
		
		private EntityRef<TACGIA> _TACGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENSACHChanging(string value);
    partial void OnTENSACHChanged();
    partial void OnIDNXBChanging(int value);
    partial void OnIDNXBChanged();
    partial void OnNAMXBChanging(System.DateTime value);
    partial void OnNAMXBChanged();
    partial void OnIDTHELOAIChanging(int value);
    partial void OnIDTHELOAIChanged();
    partial void OnIDTACGIAChanging(int value);
    partial void OnIDTACGIAChanged();
    partial void OnGIAChanging(double value);
    partial void OnGIAChanged();
    partial void OnSOLUONGSACHChanging(int value);
    partial void OnSOLUONGSACHChanged();
    partial void OnVITRISACHChanging(string value);
    partial void OnVITRISACHChanged();
    #endregion
		
		public SACH()
		{
			this._CHITIETMUONTRAs = new EntitySet<CHITIETMUONTRA>(new Action<CHITIETMUONTRA>(this.attach_CHITIETMUONTRAs), new Action<CHITIETMUONTRA>(this.detach_CHITIETMUONTRAs));
			this._NHAXUATBAN = default(EntityRef<NHAXUATBAN>);
			this._THELOAI = default(EntityRef<THELOAI>);
			this._TACGIA = default(EntityRef<TACGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSACH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENSACH
		{
			get
			{
				return this._TENSACH;
			}
			set
			{
				if ((this._TENSACH != value))
				{
					this.OnTENSACHChanging(value);
					this.SendPropertyChanging();
					this._TENSACH = value;
					this.SendPropertyChanged("TENSACH");
					this.OnTENSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNXB", DbType="Int NOT NULL")]
		public int IDNXB
		{
			get
			{
				return this._IDNXB;
			}
			set
			{
				if ((this._IDNXB != value))
				{
					if (this._NHAXUATBAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNXBChanging(value);
					this.SendPropertyChanging();
					this._IDNXB = value;
					this.SendPropertyChanged("IDNXB");
					this.OnIDNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAMXB", DbType="DateTime NOT NULL")]
		public System.DateTime NAMXB
		{
			get
			{
				return this._NAMXB;
			}
			set
			{
				if ((this._NAMXB != value))
				{
					this.OnNAMXBChanging(value);
					this.SendPropertyChanging();
					this._NAMXB = value;
					this.SendPropertyChanged("NAMXB");
					this.OnNAMXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTHELOAI", DbType="Int NOT NULL")]
		public int IDTHELOAI
		{
			get
			{
				return this._IDTHELOAI;
			}
			set
			{
				if ((this._IDTHELOAI != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTHELOAIChanging(value);
					this.SendPropertyChanging();
					this._IDTHELOAI = value;
					this.SendPropertyChanged("IDTHELOAI");
					this.OnIDTHELOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTACGIA", DbType="Int NOT NULL")]
		public int IDTACGIA
		{
			get
			{
				return this._IDTACGIA;
			}
			set
			{
				if ((this._IDTACGIA != value))
				{
					if (this._TACGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTACGIAChanging(value);
					this.SendPropertyChanging();
					this._IDTACGIA = value;
					this.SendPropertyChanged("IDTACGIA");
					this.OnIDTACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float NOT NULL")]
		public double GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGSACH", DbType="Int NOT NULL")]
		public int SOLUONGSACH
		{
			get
			{
				return this._SOLUONGSACH;
			}
			set
			{
				if ((this._SOLUONGSACH != value))
				{
					this.OnSOLUONGSACHChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGSACH = value;
					this.SendPropertyChanged("SOLUONGSACH");
					this.OnSOLUONGSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VITRISACH", DbType="NVarChar(20)")]
		public string VITRISACH
		{
			get
			{
				return this._VITRISACH;
			}
			set
			{
				if ((this._VITRISACH != value))
				{
					this.OnVITRISACHChanging(value);
					this.SendPropertyChanging();
					this._VITRISACH = value;
					this.SendPropertyChanged("VITRISACH");
					this.OnVITRISACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CHITIETMUONTRA", Storage="_CHITIETMUONTRAs", ThisKey="ID", OtherKey="IDSACH")]
		public EntitySet<CHITIETMUONTRA> CHITIETMUONTRAs
		{
			get
			{
				return this._CHITIETMUONTRAs;
			}
			set
			{
				this._CHITIETMUONTRAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAXUATBAN_SACH", Storage="_NHAXUATBAN", ThisKey="IDNXB", OtherKey="ID", IsForeignKey=true)]
		public NHAXUATBAN NHAXUATBAN
		{
			get
			{
				return this._NHAXUATBAN.Entity;
			}
			set
			{
				NHAXUATBAN previousValue = this._NHAXUATBAN.Entity;
				if (((previousValue != value) 
							|| (this._NHAXUATBAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAXUATBAN.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._NHAXUATBAN.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._IDNXB = value.ID;
					}
					else
					{
						this._IDNXB = default(int);
					}
					this.SendPropertyChanged("NHAXUATBAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_SACH", Storage="_THELOAI", ThisKey="IDTHELOAI", OtherKey="ID", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._IDTHELOAI = value.ID;
					}
					else
					{
						this._IDTHELOAI = default(int);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_SACH", Storage="_TACGIA", ThisKey="IDTACGIA", OtherKey="ID", IsForeignKey=true)]
		public TACGIA TACGIA
		{
			get
			{
				return this._TACGIA.Entity;
			}
			set
			{
				TACGIA previousValue = this._TACGIA.Entity;
				if (((previousValue != value) 
							|| (this._TACGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TACGIA.Entity = null;
						previousValue.SACHes.Remove(this);
					}
					this._TACGIA.Entity = value;
					if ((value != null))
					{
						value.SACHes.Add(this);
						this._IDTACGIA = value.ID;
					}
					else
					{
						this._IDTACGIA = default(int);
					}
					this.SendPropertyChanged("TACGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CHITIETMUONTRAs(CHITIETMUONTRA entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TACGIA")]
	public partial class TACGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BUTDANH;
		
		private EntitySet<SACH> _SACHes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBUTDANHChanging(string value);
    partial void OnBUTDANHChanged();
    #endregion
		
		public TACGIA()
		{
			this._SACHes = new EntitySet<SACH>(new Action<SACH>(this.attach_SACHes), new Action<SACH>(this.detach_SACHes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUTDANH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BUTDANH
		{
			get
			{
				return this._BUTDANH;
			}
			set
			{
				if ((this._BUTDANH != value))
				{
					this.OnBUTDANHChanging(value);
					this.SendPropertyChanging();
					this._BUTDANH = value;
					this.SendPropertyChanged("BUTDANH");
					this.OnBUTDANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TACGIA_SACH", Storage="_SACHes", ThisKey="ID", OtherKey="IDTACGIA")]
		public EntitySet<SACH> SACHes
		{
			get
			{
				return this._SACHes;
			}
			set
			{
				this._SACHes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = this;
		}
		
		private void detach_SACHes(SACH entity)
		{
			this.SendPropertyChanging();
			entity.TACGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EMAIL;
		
		private string _MATKHAU;
		
		private int _CHUCVU;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<CHUCVU> _CHUCVU1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnCHUCVUChanging(int value);
    partial void OnCHUCVUChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._CHUCVU1 = default(EntityRef<CHUCVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="Int NOT NULL")]
		public int CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					if (this._CHUCVU1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="EMAIL", OtherKey="EMAIL")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUCVU_TAIKHOAN", Storage="_CHUCVU1", ThisKey="CHUCVU", OtherKey="ID", IsForeignKey=true)]
		public CHUCVU CHUCVU1
		{
			get
			{
				return this._CHUCVU1.Entity;
			}
			set
			{
				CHUCVU previousValue = this._CHUCVU1.Entity;
				if (((previousValue != value) 
							|| (this._CHUCVU1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUCVU1.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._CHUCVU1.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._CHUCVU = value.ID;
					}
					else
					{
						this._CHUCVU = default(int);
					}
					this.SendPropertyChanged("CHUCVU1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
}
#pragma warning restore 1591
